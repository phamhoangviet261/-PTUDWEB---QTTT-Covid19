<style>
    .admin{
        display: grid;
        grid-template-columns: 1fr 7fr;
    }
    .sidebar{
        background: rgb(102,103,171);
        background: linear-gradient(90deg, rgba(102,103,171,1) 0%, rgba(75,75,200,1) 50%);
        height: 100vh;
        color: #ffffff;
    }
    .sidebar > ul > li{
        border-bottom: 1px solid #1f1f1f;
        cursor: pointer;
    }
    .sidebar > ul > li:hover{
        color: #b8b8b8;
    }

    .choosen{
        background-color: #ffffff;
        color: #000000;
    }
    {{!-- Account --}}
    {{!-- Product --}}
    {{!-- Neccessary --}}
    .hightlight-neccessary:hover{
        color: aqua;
    }
    .manage-neccessary{
        display: flex;
        
    }
    .neccessary-heading{
        font-size: 16px;
        font-weight: 600;
        border-bottom: 1px solid #a5a5a5;
        padding: 5px;
        margin: 5px;
        cursor: pointer;
    }
    .neccessary-heading:hover{
        color:aqua;
    }
    .list-neccessary{
        width: 20%;
        height: 100vh;
        border-right: 1px solid #a5a5a5;
        border-right: 1px solid #a5a5a5;
    }
    .neccessary-info{
        width: 70%;
        margin: 20px;
    }
    .a-heading{
        display: block;
        font-size: 16px;
        font-weight: 900;
        padding: 20px 10px;
        text-transform: uppercase;
    }
    .table-product-image{
        width: 100px;
    }

    {{!-- STATISTIC --}}
    .content{
        display: flex;
        flex-direction: column;
        padding: 20px;
    }
    .statistic-block{
        margin-bottom: 20px;
    }
    .block-title{
        display: flex;
    }
    .block-title::before{
        content: '';
        border-left: 4px solid var(--primary-color);
        padding-right: 10px;
        height: 38px;
    }
    canvas.chart {
        display: none;
    }
    .show {
        display: block;
    }
</style>

<div class="admin">
    <div class="sidebar">
        <h2>ADMIN</h2>
        <ul>
            <li class="manage-account {{#if isManageAccount}}choosen{{/if}}"><a class="hightlight-neccessary a-heading" href="/admin/manage-account">Manage account</a></li>
            <li class="manage-account {{#if isManagePeople}}choosen{{/if}}"><a class="hightlight-neccessary a-heading" href="/admin/manage-people">Manage people</a></li>
            <li class="manage-product {{#if isManageProduct}}choosen{{/if}}"><a class="hightlight-neccessary a-heading" href="/admin/manage-product">Manage product</a></li>
            <li class="manage-neccessary {{#if isManageNeccessary}}choosen{{/if}}"><a class="hightlight-neccessary a-heading" href="/admin/manage-neccessary">Manage Neccessary</a></li>
            <li class="manage-neccessary {{#if isStatistic}}choosen{{/if}}"><a class="hightlight-neccessary a-heading" href="/admin/statistic">Statistic</a></li>
        </ul>
        
    </div>
    <div class="content">
        
        <div class="statistic-block">
            <div class="block-title">
                <h2>Thống kê số lượng người ở từng trạng thái theo thời gian</h2>
            </div>
        </div>        
        <canvas id="FChart" width="400" height="400"></canvas>
        <input id="ip1" type="text" value={{ temp }} style="visibility: hidden">
        <input id="ip2" type="text" value='{{ temp2 }}' style="visibility: hidden">

        <div class="statistic-block">
            <div class="block-title">
                <h2>Thống kê số lượng gói nhu yếu phẩm tiêu thụ</h2>
            </div>
        </div>
        <canvas id="NYPChart" width="400" height="400"></canvas>
        <input id="ipslNYPsale" type="text" value={{ slNYPsale }} style="visibility: hidden">
        <input id="iptenNYP" type="text" value='{{ tenNYP }}' style="visibility: hidden">

        <div class="statistic-block">
            <div class="block-title">
                <h2>Thống kê số lượng sản phẩm tiêu thụ</h2>
            </div>
        </div>
        <canvas id="SPChart" width="400" height="400"></canvas>
        <input id="ipslSPsale" type="text" value={{ slSPsale }} style="visibility: hidden">
        <input id="iptenSP" type="text" value='{{ tenSP }}' style="visibility: hidden">

        <div class="statistic-block">
            <div class="block-title">
                <h2>Thống kê doanh thu nạp tiền</h2>
            </div>
        </div>
        <canvas id="SevenueChart" width="400" height="400"></canvas>
        <input id="ipsevenueDNTs" type="text" value={{ sevenueDNTs }} style="visibility: hidden">
        <input id="ipmonths" type="text" value='{{ months }}' style="visibility: hidden">
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<script>
    function getRandomColor() {
        let letters = '0123456789ABCDEF';
        let color = '#';
        for (let i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    };
    function getRgba(number, max) {
        return `rgba(0, 0, 255, ${number/max})`
    };

    
    let colors = [];
    const temp = JSON.parse(document.getElementById('ip1').value);
    const temp2 = JSON.parse(document.getElementById('ip2').value);
    temp.forEach((temp, i, arr) => colors.push(getRgba(temp, Math.max(...arr))));
    const FChart = new Chart("FChart", {
        type: 'horizontalBar',
        data: {
            labels: temp2 ,
            datasets: [{
                label: 'Lượng người',
                data:  temp,
                backgroundColor: colors
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    colors = [];
    const slNYPsale = JSON.parse(document.getElementById('ipslNYPsale').value);
    const tenNYP = JSON.parse(document.getElementById('iptenNYP').value);
    slNYPsale.forEach(slNYPsale => colors.push(getRandomColor()));
    const NYPChart = new Chart("NYPChart", {
        type: 'pie',
        data: {
            labels: tenNYP,
            datasets: [{
                data:  slNYPsale,
                backgroundColor: colors
            }]
        }
    });

    
    colors = [];
    const slSPsale = JSON.parse(document.getElementById('ipslSPsale').value);
    const tenSP = JSON.parse(document.getElementById('iptenSP').value);
    slSPsale.forEach(slSPsale => colors.push(getRandomColor()));
    const SPChart = new Chart("SPChart", {
        type: 'horizontalBar',
        data: {
            labels: tenSP,
            datasets: [{
                label: 'Lượng tiêu thụ',
                data:  slSPsale,
                backgroundColor: colors,
            }]
        }
    });
    
    
    const sevenueDNTs = JSON.parse(document.getElementById('ipsevenueDNTs').value);
    const months = JSON.parse(document.getElementById('ipmonths').value);
    const SevenueChart = new Chart("SevenueChart", {
        type: 'line',
        data: {
            labels: months,
            datasets: [{
                pointRadius: 10,
                label: 'Tổng nạp',
                fill: false,
                lineTension: 0,
                data:  sevenueDNTs,
                backgroundColor: "rgba(255, 0, 0, 1.0)",
                borderColor: "rgba(255, 0, 0, 0.4)",
            }]
        },
        options: {
        }
    });
</script>